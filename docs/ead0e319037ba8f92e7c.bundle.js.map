{"version":3,"sources":["webpack://api-unsplash/./src/js/http-provider.js","webpack://api-unsplash/./src/js/imagenes-page.js","webpack://api-unsplash/./src/index.js","webpack://api-unsplash/./src/js/daynight-control.js"],"names":["document","getElementById","mensajeResultados","crearVectorImagenes","async","resultados","innerHTML","palabraBuscar","value","resp","fetch","valorQuery","APIKey","ok","results","json","length","classList","remove","add","error","console","log","cargarImagenesAPI","imagenesNodo","forEach","resultado","key","createElement","style","backgroundImage","urls","small","addEventListener","window","open","links","download","imagenes","appendChild","lupa","hora","Date","getHours","body","backgroundColor","color","input","evento"],"mappings":"mBACA,MAIM,EAAQA,SAASC,eAAe,SAChC,EAAWD,SAASC,eAAe,YACnCC,EAAoBF,SAASC,eAAe,iBCHrCE,EAAsBC,UAC/B,MAAMC,ODKwBD,WAE9B,EAASE,UAAW,GACpB,IACI,MAAMC,EAAgB,EAAMC,MACtBC,QAAaC,OAbNC,EAayBJ,EAbbK,EADf,8CACyB,gDAAgDD,2BAAoCC,MAcvH,IAAKH,EAAKI,GACN,KAAM,uDAEV,MAAOC,QAAST,SAAoBI,EAAKM,OASzC,OAPyB,IAAtBV,EAAWW,OACVd,EAAkBe,UAAUC,OAAO,UAEnChB,EAAkBe,UAAUE,IAAI,UAGpC,EAAMX,MAAO,GACNH,EACT,MAAOe,GACLC,QAAQC,IAAIF,GA5BA,IAACT,EAAYC,GCGJW,GAEzBF,QAAQC,IAAI,QACZ,MAAME,EAAe,GACrBnB,EAAWoB,SAAQ,CAACC,EAAWC,KAC3BH,EAAaG,GAAO3B,SAAS4B,cAAc,OAC3CJ,EAAaG,GAAKV,UAAUE,IAAI,OAChCK,EAAaG,GAAKE,MAAMC,gBAAiB,OAAOJ,EAAUK,KAAKC,SAC/DR,EAAaG,GAAKM,iBAAiB,YAAa,KAG5CC,OAAOC,KAAKT,EAAUU,MAAMC,SAAU,aAE1CC,SAASC,YAAYf,EAAaG,QCVpCa,EAAOxC,SAASC,eAAe,QAIrCiC,OAAOD,iBAAiB,QCVI,KAExB,MAEMQ,GAFQ,IAAIC,MAECC,WAEhBF,EAAO,GAAKA,EAAM,IAEjBzC,SAAS4C,KAAKf,MAAMgB,gBAAgB,OACpC7C,SAAS4C,KAAKf,MAAMiB,MAAO,YAE3B9C,SAAS4C,KAAKf,MAAMgB,gBAAiB,UACrC7C,SAAS4C,KAAKf,MAAMiB,MAAO,WDAnCC,MAAMd,iBAAiB,SAAUe,IACV,UAAfA,EAAOrB,KACPxB,OAIRqC,EAAKP,iBAAiB,SAAS7B,UAC3BD,Q","file":"ead0e319037ba8f92e7c.bundle.js","sourcesContent":["// DIRECCION Y API KEY DE UNSPLASH\r\nconst accessKey = 'axhQev7pRUBk52XaNQ6EWXCdr8Up3Ot-TjCtjb89HNQ';\r\nconst APIUnsplash = (valorQuery, APIKey)=> `https://api.unsplash.com/search/photos?query=${valorQuery}&per_page=30&client_id=${APIKey}`;\r\n\r\n\r\nconst input = document.getElementById('input');\r\nconst imagenes = document.getElementById('imagenes');\r\nconst mensajeResultados = document.getElementById('no-resultados');\r\n\r\n// Funcion encargada de realizar la conexion a la API\r\n export const cargarImagenesAPI = async () => {\r\n    // Borramos los elementos que tenemos de la busqueda anterior:\r\n    imagenes.innerHTML ='';\r\n    try {\r\n        const palabraBuscar = input.value;\r\n        const resp = await fetch (APIUnsplash(palabraBuscar, accessKey));\r\n        if (!resp.ok){\r\n            throw 'No se ha podido realizar la conexion con el servidor'\r\n        }\r\n        const {results: resultados} = await resp.json();\r\n        // Si no hay resultados muestro un mensaje\r\n        if(resultados.length === 0){\r\n            mensajeResultados.classList.remove('hidden')\r\n        } else {\r\n            mensajeResultados.classList.add('hidden');\r\n        }\r\n        // Borra lo escrito en el input\r\n        input.value ='';\r\n        return resultados;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}","// Importamos proveedor de imagenes\r\nimport { cargarImagenesAPI } from './http-provider';\r\n\r\n// Funcion con la que dibujamos en el HTML \r\nexport const crearVectorImagenes = async() => {\r\n    const resultados = await cargarImagenesAPI();\r\n    // Recibimos la informacion en un vector y de alli queremos extraer la direccion de las imagenes, esta direccion será la que utilizaremos para establecer el valor en el CSS\r\n    console.log('hola');\r\n    const imagenesNodo = [];\r\n    resultados.forEach((resultado, key) => {\r\n        imagenesNodo[key] = document.createElement('div');\r\n        imagenesNodo[key].classList.add('img');\r\n        imagenesNodo[key].style.backgroundImage =`url(${resultado.urls.small})`\r\n        imagenesNodo[key].addEventListener('dblclick' , () => {\r\n            // Buscamos que al hacer doble click sobre cada una de las imagenes se abra la imagen en su tamaño original para poder descargarla\r\n            // el objeto json que recibimos tiene una propiedad links y dentro otra download que realiza esa accion.\r\n            window.open(resultado.links.download, '_blank')\r\n        })\r\n        imagenes.appendChild(imagenesNodo[key]);\r\n    });\r\n}","// Importamos la clase que necesitamos\r\nimport './css/style.css';\r\n\r\n// Importamos las funciones que necesitamos para que funcione la app\r\nimport { crearVectorImagenes } from './js/imagenes-page';\r\nimport { diaNocheModo } from './js/daynight-control';\r\n\r\n// Elementos del DOM\r\nconst lupa = document.getElementById('lupa');\r\n\r\n// EVENTOS\r\n// Evento que controla cuando la pagina se acaba de cargar, este evento llama a la funcion que controla el color de la página.\r\nwindow.addEventListener('load',diaNocheModo);\r\n// Evento que al pulsar enter en el input inicia la peticion a la API.\r\ninput.addEventListener('keyup', (evento) => {\r\n    if (evento.key === 'Enter') {\r\n        crearVectorImagenes();\r\n    }\r\n})\r\n// Evento que al pulsar la lupa se inicia la peticion a la API.\r\nlupa.addEventListener('click', async() => {\r\n    crearVectorImagenes();\r\n})","\r\n// Llamadas a las funciones\r\nexport const diaNocheModo = () => {\r\n    // Primero llamamos al objeto date.\r\n    const fecha = new Date();\r\n    // Segundo extraemos la hora de la fecha.\r\n    const hora = fecha.getHours();\r\n    // Tercero hacemos las condiciones, el metodo getHours, devuelve la hora en formato 0 a 23.\r\n    if(hora > 7 && hora <20){\r\n        // Accedemmos al body desde el docuuento y cambiamos el background-color y el color.\r\n        document.body.style.backgroundColor='#fff';\r\n        document.body.style.color= '#121212';\r\n    } else {\r\n        document.body.style.backgroundColor ='#121212';\r\n        document.body.style.color= '#fff';\r\n    }\r\n}"],"sourceRoot":""}